FROM python:3.12-bookworm as build

ARG CST_TARBALL=cst-3.4.1.tgz
ARG CST_TARBALL_CKSUM=b23ed5983734d4812fcf1da33eac8f31
# Won't fail if CST_TARBALL is not present to allow for a better error message
# to be surfaced with instructions later on
COPY requirements.txt ${CST_TARBALL} /var/tmp/
RUN pip3 install -r /var/tmp/requirements.txt
RUN apt-get update && apt-get install -y linux-kbuild-6.1 byacc flex && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/*

# NXP's CST tool only available for x86_64 architecture
RUN if [ $(uname -m) != "x86_64" ]; then echo "Signing server only supported for x86_84 architectures"; exit 1; fi

RUN if [ ! -f "/var/tmp/${CST_TARBALL}" ]; then echo "Please download the CST tool from https://www.nxp.com/webapp/Download?colCode=IMX_CST_TOOL_NEW&location=null"; exit 1; fi

RUN if [ "${CST_TARBALL_CKSUM}" = "$(md5sum "/var/tmp/${CST_TARBALL}" | awk '{print $1}')" ]; then tar -xvf /var/tmp/${CST_TARBALL} && sed -i '/$(OPENSSL_TAR):/{N;s/curl /curl -L /;}' ${CST_TARBALL%.*}/Makefile && make -C "${CST_TARBALL%.*}"; else echo "Invalid checksum for ${CST_TARBALL} - expecting ${CST_TARBALL_CKSUM}"; exit 1; fi

FROM python:3.12-bookworm
ARG CST_DIR=cst-3.4.1
COPY --from=build /usr/local/bin/gunicorn /usr/src/linux-kbuild-6.1/scripts/sign-file /usr/local/bin/
COPY --from=build /usr/local/lib/python3.12/site-packages/ /usr/local/lib/python3.12/
RUN mkdir -p /usr/local/cst/keys /usr/local/cst/crts
COPY --from=build ${CST_DIR}/linux64/bin/* /usr/local/bin/
COPY --from=build ${CST_DIR}/keys/hab4_pki_tree.sh /usr/local/cst/keys/
COPY --from=build ${CST_DIR}/keys/ahab_pki_tree.sh /usr/local/cst/keys
COPY --from=build ${CST_DIR}/keys/add_key.sh /usr/local/cst/keys
RUN chmod +x /usr/local/cst/keys/*.sh
COPY --from=build ${CST_DIR}/ca/ /usr/local/cst/ca

RUN apt-get update && apt-get install -y cryptsetup efitools gnupg2 libxml2 sbsigntool && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
RUN mkdir -p /opt/balena
RUN useradd -r balenasign -m -d /opt/balena/balenasign
RUN mkdir -p /opt/balena/balenasign/secrets/gpg
RUN mkdir -p /opt/balena/balenasign/secrets/x509

COPY start.sh /usr/local/bin/
COPY src /opt/balena/balenasign
COPY api.yml /opt/balena/balenasign/

RUN chown -R balenasign:balenasign /opt/balena/balenasign
RUN chmod 0700 /opt/balena/balenasign/secrets/gpg

ENV HOME=/tmp

CMD /usr/local/bin/start.sh
