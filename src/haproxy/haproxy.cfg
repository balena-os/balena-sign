global
	tune.ssl.default-dh-param 1024
	# https://github.com/haproxytech/haproxy-lua-cors
	lua-load /usr/local/etc/haproxy/cors.lua
	# https://www.haproxy.com/blog/introduction-to-haproxy-logging/
	log stdout format raw daemon "${LOGLEVEL}"
	log stderr format raw daemon "${LOGLEVEL}"
	ssl-default-bind-options ssl-min-ver TLSv1.2

defaults
	default-server init-addr last,libc,none
	default-server inter 3s rise 2 fall 3
	log global
	mode http
	option contstats
	option dontlognull
	option forwardfor
	option httplog
	timeout client 63s
	timeout connect 5s
	timeout http-keep-alive 1s
	timeout http-request 63s
	timeout server 63s
	timeout tunnel 3600s

resolvers docker-bridge-resolver
	nameserver docker-resolver 127.0.0.11:53
	hold valid 0ms

http-errors balena-http-errors
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 401 /etc/haproxy/errors/401.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 404 /etc/haproxy/errors/404.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http

userlist balena
	user balena insecure-password "${BALENA_DEVICE_UUID}"

listen haproxy-stats
	bind *:1936
	stats auth "balena:${BALENA_DEVICE_UUID}"
	stats enable
	stats uri /metrics

frontend http
	bind *:80
	default_backend sign-backend
	errorfiles balena-http-errors
	http-response lua.cors
	# https://www.haproxy.com/blog/haproxy-log-customization/
	log-format "%ci:%cp [%tr] %ft %b/%s %TR/%Tw/%Tc/%Tr/%Ta %ST %B %CC %CS %tsc %ac/%fc/%bc/%sc/%rc %sq/%bq %hr %hs %{+Q}r"
	acl sign_dead nbsrv(sign-backend) lt 1
	monitor-uri /health
	monitor fail if sign_dead

backend sign-backend
	server balena-sign balenasign:8080 resolvers docker-bridge-resolver resolve-prefer ipv4 check port 8080
